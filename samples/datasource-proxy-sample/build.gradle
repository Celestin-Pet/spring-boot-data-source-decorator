plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE'
}

repositories {
    mavenLocal()
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    compile("com.github.gavlyukovskiy:datasource-proxy-spring-boot-starter:${project.version}")

    compile("org.springframework.boot:spring-boot:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-autoconfigure:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-logging:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-tomcat:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-web:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-jdbc:2.0.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-aop:2.0.3.RELEASE")

    compile("org.springframework.cloud:spring-cloud-sleuth-core:2.0.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-sleuth-zipkin:2.0.0.RELEASE")

    compile("com.h2database:h2:1.4.193")
    compile("org.apache.commons:commons-io:1.3.2")

    testCompile("org.springframework.boot:spring-boot-starter-test:2.0.3.RELEASE")
    testCompile("junit:junit:4.12")
}

bootRun {
    if (project.hasProperty("zipkin")) {
        args += "--spring.zipkin.enabled=true"
        args += "--spring.sleuth.enabled=true"
    }
    if (project.hasProperty("args")) {
        project.findProperty('args').split(" ").each { args += it }
    }
}


